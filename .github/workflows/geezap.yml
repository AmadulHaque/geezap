name: Geezap Deployment to Production Server
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: mbstring, bcmath, xml, curl, mysql, zip
          coverage: none

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Composer Dependencies
        run: composer install --optimize-autoloader --no-dev --no-progress --no-interaction --prefer-dist

      - name: Cache NPM packages
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install NPM Dependencies
        run: npm ci

      - name: Build NPM Assets
        run: npm run build

      - name: Deploy to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          source: "."
          target: "/var/www/html/geezap"
          rm: true
          strip_components: 1
          exclude: ".env,.env.example,.git/,.github/,node_modules/,vendor/"

      - name: Run Remote Commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          envs: DB_DATABASE,DB_USERNAME,DB_PASSWORD
          environment: |
            DB_DATABASE=${{ secrets.DB_DATABASE }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          script: |
            cd /var/www/html/geezap

            # Create MySQL user and grant privileges
            sudo mysql -e "CREATE USER IF NOT EXISTS '${{ secrets.DB_USERNAME }}'@'localhost' IDENTIFIED BY '${{ secrets.DB_PASSWORD }}';"
            sudo mysql -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.DB_DATABASE }};"
            sudo mysql -e "GRANT ALL PRIVILEGES ON ${{ secrets.DB_DATABASE }}.* TO '${{ secrets.DB_USERNAME }}'@'localhost';"
            sudo mysql -e "FLUSH PRIVILEGES;"

            # Install PHP MySQL if not installed
            sudo apt-get update
            sudo apt-get install -y php8.3-mysql

            # Restart PHP-FPM
            sudo systemctl restart php8.3-fpm

            # Put application in maintenance mode
            php artisan down --refresh=15

            # Clear all caches
            php artisan config:clear
            php artisan cache:clear
            php artisan view:clear
            php artisan route:clear

            # Update database
            php artisan migrate --force

            # Clear and cache config
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # Install/update dependencies
            composer install --optimize-autoloader --no-dev --no-interaction

            # Set correct permissions
            sudo chown -R www-data:www-data .
            sudo find . -type f -exec chmod 644 {} \;
            sudo find . -type d -exec chmod 755 {} \;
            sudo chmod -R 775 storage bootstrap/cache

            # Restart queue workers
            php artisan queue:restart

            # Take application out of maintenance mode
            php artisan up

            # Optimize
            php artisan optimize
